---
name: release
on:
  push:
    branches-ignore:
      - "**"
    tags:
      - "v*.*.*"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: setup go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13.x

      - name: checkout
        uses: actions/checkout@v2

      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: v1-${{ runner.os }}-gomod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            - v1-${{ runner.os }}-gomod-

      - name: setup xgo
        run: go get github.com/crazy-max/xgo

      - name: dep
        run: go mod download

      - name: download font
        run: |
          mkdir -p fonts
          wget -O fonts/ipaexg00401.zip https://ipafont.ipa.go.jp/IPAexfont/ipaexg00401.zip
          cd fonts && unzip ipaexg00401.zip

      - name: generate font data
        run: |
          go get github.com/rakyll/statik
          $(go env GOPATH)/bin/statik -f -include=*.ttf -src=fonts

      - name: make binary
        run: |
          export PATH=${PATH}:$(go env GOPATH)/bin
          make all

      - name: create assets
        run: |
          mkdir -p build/release
          cp README.md LICENSE fonts/ipaexg00401/IPA_Font_License_Agreement_v1.0.txt build/pixela-desktop_Linux_x86_64
          cp README.md LICENSE fonts/ipaexg00401/IPA_Font_License_Agreement_v1.0.txt build/pixela-desktop_macOS_x86_64
          cp README.md LICENSE fonts/ipaexg00401/IPA_Font_License_Agreement_v1.0.txt build/pixela-desktop_Windows_x86_64
          zip -j build/release/pixela-desktop_macOS_x86_64.zip build/pixela-desktop_macOS_x86_64/*
          zip -j build/release/pixela-desktop_Windows_x86_64.zip build/pixela-desktop_Windows_x86_64/*
          cd build && tar -zcvf release/pixela-desktop_Linux_x86_64.tar.gz pixela-desktop_Linux_x86_64/*

      - name: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_TAG: ${{ github.ref }}
          GO111MODULE: on
        run: |
          go get -u github.com/tcnksm/ghr
          export TAGNAME=$(echo ${RELEASE_TAG} | sed -e 's!refs/tags/!!g')
          $(go env GOPATH)/bin/ghr -n "${TAGNAME}" -b "${TAGNAME}" -draft -prerelease  ${TAGNAME} build/release/
